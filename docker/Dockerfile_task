FROM amazonlinux:latest

SHELL ["/bin/bash", "-c"]

ENV RASA_NLU_DOCKER="YES" \
    RASA_NLU_HOME=/app

WORKDIR ${RASA_NLU_HOME}
RUN yum update -y
RUN yum -y install wget make gcc openssl-devel bzip2-devel
RUN amazon-linux-extras install python3.8
RUN rm /usr/bin/python
RUN ln -s /usr/bin/python3.8 /usr/bin/python
RUN python -m pip install --upgrade pip
RUN python -m pip install pyyaml
RUN python -m pip install rasa[full]==2.8.15
RUN python -m pip install cython
RUN python -m pip install pandas
RUN python -m pip install pyjwt
RUN python -m pip install passlib[bcrypt]
RUN python -m pip install python-multipart
RUN python -m pip install validators
RUN python -m pip install secure
RUN python -m spacy download en_core_web_md
RUN python -m spacy link en_core_web_md en
RUN python -m pip install password-strength
RUN python -m pip install loguru
RUN python -m pip install smart-config==0.1.3
RUN python -m pip install elastic-apm
RUN python -m pip install transformers==4.23.0
RUN python -m pip install cryptography~=3.4.8
RUN python -m pip install fastapi_sso
RUN python -m pip install numpy==1.22.0
RUN python -m pip install websockets==10.1
RUN python -m pip install aiohttp==3.8.0
RUN python -m pip install ujson==5.1.0
RUN python -m pip install blinker
RUN python -m pip install google-cloud-translate
RUN python -m pip install keybert
RUN python -m pip install bs4
RUN python -m pip install protobuf==3.20.2
RUN python -m pip install mongoengine==0.23.1
RUN python -m pip install pymongo==3.12.0
RUN python -m pip install torch==1.11.0
RUN python -m pip install pyjwt==2.6.0

RUN mkdir ssl
RUN chmod 777 -R /tmp
RUN mkdir -p /home/cache
RUN chmod -R 777 /home/cache

ENV HF_HOME="/home/cache"

COPY kairon ${RASA_NLU_HOME}/kairon
COPY metadata /app/metadata
COPY system.yaml ${RASA_NLU_HOME}/
COPY template ${RASA_NLU_HOME}/template
COPY custom ${RASA_NLU_HOME}/custom
COPY email.yaml ${RASA_NLU_HOME}/
COPY augmentation ${RASA_NLU_HOME}/augmentation

ENV BOT default
ENV USER default
ENV TOKEN default

CMD ["sh","-c","python -m kairon train ${BOT} ${USER} ${TOKEN}"]
