# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Python CI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install flake8
        python -m pip install wheel
        chmod 777 ./setup.sh
        ./setup.sh
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest --html=report.html --cov=kairon tests/ --cov-report html:coverage_html --ignore tests/unit_test/augmentation/ --ignore tests/load_test/
    - name: Archive pytest results
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: pytest-report
        path: report.html
    - name: Generate Sphinx files
      run: |
        pip install -U sphinx
        pip install sphinx_rtd_theme
        cd docs
        # sphinx-quickstart
        # set system_file=../system.yaml
        export system_file=../system.yaml
        export EMAIl_CONF=../email.yaml
        make html
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: github.ref == 'refs/heads/master'
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Copy files to the website
      if: github.ref == 'refs/heads/master'
      run: |
        aws s3 sync docs/_build/html s3://${{ secrets.S3_PATH }}
    # Coveralls related steps
    - name: Coverage with coveralls
      run: |
        python -m pip install coveralls
        coverage run --source=kairon -m pytest tests/
    - env:
        COVERALLS_PARALLEL: true
        COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Submit to coveralls.io
      run: |
        coveralls --service=github
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
